name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: notes-backend
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update ECS service
      run: |
        # Fetch the latest task definition as JSON
        TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition notes --region us-west-2 --query 'taskDefinition')
        
        # Replace the old image with the new image within the task definition
        NEW_TASK_DEFINTIION=$(echo $TASK_DEFINITION | jq --arg NEW_IMAGE "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" '.containerDefinitions[0].image=$NEW_IMAGE')
        
        # Register the new task definition
        NEW_TASK_ARN=$(echo $NEW_TASK_DEFINTIION | aws ecs register-task-definition --cli-input-json file://- --region us-west-2 --query 'taskDefinition.taskDefinitionArn' --output text)
        
        # Update the ECS service to use the new task definition
        aws ecs update-service --cluster notesApp --service notes-backend --task-definition $NEW_TASK_ARN --region us-west-2

